name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm install
      
    - name: Run linting
      working-directory: ./frontend
      run: npx eslint src/ --ext .js,.jsx --max-warnings 0
      
    - name: Run tests
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false --passWithNoTests
      
    - name: Build production
      working-directory: ./frontend
      env:
        REACT_APP_BACKEND_URL: ${{ secrets.REACT_APP_BACKEND_URL }}
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        retention-days: 30
        
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: frontend/coverage/
        retention-days: 30

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      run: |
        echo "Deploy triggered for frontend"
        echo "Vercel will automatically deploy from GitHub integration" 